{
	"skeletonType": "ComparativeEffectStudy",
	"skeletonVersion": "v0.0.1",
	"requiredHydraVersion": "v0.0.1",
	"actions":[{
		"type": "fileNameFindAndReplace",
		"input": "packageName",
		"find": "SkeletonComparativeEffectStudy"
	},{
		"type": "stringFindAndReplace",
		"input": "packageName",
		"find": "SkeletonComparativeEffectStudy"
	},{
		"type": "jsonArrayToCsv",
		"input": "cohortDefinitions",
		"mapping": [{"source": "id", "target": "atlasId"},
					{"source": "name", "target": "atlasName"},
					{"source": "id", "target": "cohortId"},
					{"source": "name", "target": "name", "modifiers": ["convertToFileName"]}],
		"output": "inst/settings/CohortsToCreate.csv"
	},{
		"type": "jsonArrayToCsv",
		"input": "estimationAnalysisSettings.analysisSpecification.targetComparatorOutcomes",
		"mapping": [{"source": "targetId", "target": "targetId"},
					{"source": "comparatorId", "target": "comparatorId"},
					{"source": "outcomeIds", "target": "outcomeIds", "separator": ";"},
					{"source": "excludedCovariateConceptIds", "target": "excludedCovariateConceptIds", "separator": ";"}],
		"output": "inst/settings/TcosOfInterest.csv"
	},{
		"type": "jsonArrayToCsv",
		"input": "negativeControls",
		"mapping": [{"source": "targetId", "target": "targetId"},
					{"source": "comparatorId", "target": "comparatorId"},
					{"source": "outcomeId", "target": "outcomeId"},
					{"source": "outcomeName", "target": "outcomeName"}],
		"output": "inst/settings/NegativeControls.csv"
	},{
		"type": "jsonArrayToJson",
		"input": "cohortDefinitions",
		"fileName": "name",
		"payload": "expression",
		"output": "inst/cohorts"
	},{
		"type": "jsonArrayToSql",
		"input": "cohortDefinitions",
		"fileName": "name",
		"payload": "expression",
		"output": "inst/sql/sql_server"
	},{
		"type": "jsonToJson",
		"input": "estimationAnalysisSettings.analysisSpecification",
		"output": "inst/settings/cmAnalysisList.json"
	},{
		"type": "jsonToRargs",
		"input": "doPositiveControlSynthesis",
		"file": "R/Main.R",
		"startTag": "# Start doPositiveControlSynthesis",
		"endTag": "# End doPositiveControlSynthesis"
	},{
		"type": "jsonToRargs",
		"input": "positiveControlSynthesisArgs",
		"condition": "doPositiveControlSynthesis",
		"file": "R/SynthesizePositiveControls.R",
		"startTag": "# Start positiveControlSynthesisArgs",
		"endTag": "# End positiveControlSynthesisArgs",
		"argumentFunctions": [{"source": "covariateSettings", "function": "FeatureExtraction::createCovariateSettings"},
							  {"source": "prior", "function": "Cyclops::createPrior"},
							  {"source": "control", "function": "Cyclops::createControl"}]
	}]
}